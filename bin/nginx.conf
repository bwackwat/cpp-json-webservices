worker_processes  1;

events {
    worker_connections  2048;
    multi_accept        on;
    use                 epoll;
}

worker_rlimit_nofile 40000;

http {
	geo $whitelist {
		default 0;
		# CIDR in the list below are not limited
		1.2.3.0/24 1;
		9.10.11.12/32 1;
		127.0.0.1/32 1;
	}

	map $whitelist $limit {
		0	$binary_remote_addr;
		1	"";
	}
	
	# The directives below limit concurrent connections from a 
	# non-whitelisted IP address to five

	limit_conn_zone      $limit    zone=connlimit:10m;

	limit_conn           connlimit 5;
	limit_conn_log_level warn;   # logging level when threshold exceeded
	limit_conn_status    503;    # the error code to return

	# The code below limits the number requests from a non-whitelisted IP
	# to one every two seconds with up to 3 requests per IP delayed 
	# until the average time between responses reaches the threshold. 
	# Further requests over and above this limit will result 
	# in an immediate 503 error.

	limit_req_zone       $limit   zone=one:10m  rate=90r/m;

	limit_req            zone=one burst=3;
	limit_req_log_level  warn;
	limit_req_status     503;

	sendfile           on;
	tcp_nopush         on;
	tcp_nodelay        on;
	keepalive_timeout  15;

	# don't send the nginx version number in error pages and Server header
	server_tokens off;

	server {
		listen 80;
		#server_name bwackwat.com;
		server_name localhost;
		return 301 https://$server_name$request_uri;
	}

	upstream cpp_json_webservice {
		server 127.0.0.1:8000;
		keepalive 20;
	}

	server {
		listen 443 ssl;
		#server_name bwackwat.com;
		server_name localhost;

		# on for large files!
		gzip off;
	
		ssl_dhparam /etc/nginx/ssl/dhparam.pem;

		#PRODUCTION CERTS FROM LETS ENCRYPT CERTBOT
		#ssl_certificate /etc/letsencrypt/live/bwackwat.com/cert.pem;
		#ssl_certificate_key /etc/letsencrypt/live/bwackwat.com/privkey.pem;
		
		#DEV CERTS AUTOGENERATED (openssl)
		ssl_certificate /etc/nginx/ssl/webservice.crt;
		ssl_certificate_key /etc/nginx/ssl/webservice.key;

		ssl on;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
		ssl_prefer_server_ciphers on;
		ssl_session_cache shared:SSL:10m;
	
		access_log /var/log/nginx/webservice.access.log;
		error_log /var/log/nginx/webservice.error.log debug;

		# "Should keep things from caching."
		add_header Cache-Control no-cache;

		root /etc/nginx/html;
		index index.html;

		error_page 404 /404.html;
			location = /40x.html {
		}

		location / {
			try_files $uri $uri/ =404;
		}

		location /api/ {
			rewrite /api(.*) $1     break;
			proxy_set_header        X-Real-IP $remote_addr;
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header        X-Forwarded-Proto $scheme;
			proxy_set_header 	Connection "";

			proxy_http_version	1.1;

			proxy_pass             	http://cpp_json_webservice;
			proxy_read_timeout     	300;
			proxy_connect_timeout  	300;
		}
	}
}
